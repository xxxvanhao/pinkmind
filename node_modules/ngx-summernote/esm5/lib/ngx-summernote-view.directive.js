/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Directive, Input, ElementRef, Renderer } from '@angular/core';
var NgxSummernoteViewDirective = /** @class */ (function () {
    function NgxSummernoteViewDirective(renderer, element) {
        this.renderer = renderer;
        this._element = element.nativeElement;
    }
    Object.defineProperty(NgxSummernoteViewDirective.prototype, "ngxSummernoteView", {
        set: /**
         * @param {?} content
         * @return {?}
         */
        function (content) {
            this._element.innerHTML = content || '';
        },
        enumerable: true,
        configurable: true
    });
    /**
     * @return {?}
     */
    NgxSummernoteViewDirective.prototype.ngAfterViewInit = /**
     * @return {?}
     */
    function () {
        this.renderer.setElementClass(this._element, 'ngx-summernote-view', true);
    };
    NgxSummernoteViewDirective.decorators = [
        { type: Directive, args: [{
                    // tslint:disable-next-line:directive-selector
                    selector: '[ngxSummernoteView]'
                },] },
    ];
    /** @nocollapse */
    NgxSummernoteViewDirective.ctorParameters = function () { return [
        { type: Renderer },
        { type: ElementRef }
    ]; };
    NgxSummernoteViewDirective.propDecorators = {
        ngxSummernoteView: [{ type: Input }]
    };
    return NgxSummernoteViewDirective;
}());
export { NgxSummernoteViewDirective };
if (false) {
    /**
     * @type {?}
     * @private
     */
    NgxSummernoteViewDirective.prototype._element;
    /**
     * @type {?}
     * @private
     */
    NgxSummernoteViewDirective.prototype.renderer;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmd4LXN1bW1lcm5vdGUtdmlldy5kaXJlY3RpdmUuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9uZ3gtc3VtbWVybm90ZS8iLCJzb3VyY2VzIjpbImxpYi9uZ3gtc3VtbWVybm90ZS12aWV3LmRpcmVjdGl2ZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUNILFNBQVMsRUFBRSxLQUFLLEVBQUUsVUFBVSxFQUFFLFFBQVEsRUFDekMsTUFBTSxlQUFlLENBQUM7QUFJdkI7SUFXSSxvQ0FDWSxRQUFrQixFQUMxQixPQUFtQjtRQURYLGFBQVEsR0FBUixRQUFRLENBQVU7UUFHMUIsSUFBSSxDQUFDLFFBQVEsR0FBRyxPQUFPLENBQUMsYUFBYSxDQUFDO0lBQzFDLENBQUM7SUFYRCxzQkFBYSx5REFBaUI7Ozs7O1FBQTlCLFVBQStCLE9BQWU7WUFDMUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxTQUFTLEdBQUcsT0FBTyxJQUFJLEVBQUUsQ0FBQztRQUM1QyxDQUFDOzs7T0FBQTs7OztJQVdELG9EQUFlOzs7SUFBZjtRQUNJLElBQUksQ0FBQyxRQUFRLENBQUMsZUFBZSxDQUFDLElBQUksQ0FBQyxRQUFRLEVBQUUscUJBQXFCLEVBQUUsSUFBSSxDQUFDLENBQUM7SUFDOUUsQ0FBQzs7Z0JBcEJKLFNBQVMsU0FBQzs7b0JBRVAsUUFBUSxFQUFFLHFCQUFxQjtpQkFDbEM7Ozs7Z0JBUmlDLFFBQVE7Z0JBQXBCLFVBQVU7OztvQ0FVM0IsS0FBSzs7SUFnQlYsaUNBQUM7Q0FBQSxBQXJCRCxJQXFCQztTQWpCWSwwQkFBMEI7Ozs7OztJQUtuQyw4Q0FBc0I7Ozs7O0lBR2xCLDhDQUEwQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7XG4gICAgRGlyZWN0aXZlLCBJbnB1dCwgRWxlbWVudFJlZiwgUmVuZGVyZXIsIEFmdGVyVmlld0luaXRcbn0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5cbmRlY2xhcmUgdmFyICQ7XG5cbkBEaXJlY3RpdmUoe1xuICAgIC8vIHRzbGludDpkaXNhYmxlLW5leHQtbGluZTpkaXJlY3RpdmUtc2VsZWN0b3JcbiAgICBzZWxlY3RvcjogJ1tuZ3hTdW1tZXJub3RlVmlld10nXG59KVxuZXhwb3J0IGNsYXNzIE5neFN1bW1lcm5vdGVWaWV3RGlyZWN0aXZlIGltcGxlbWVudHMgQWZ0ZXJWaWV3SW5pdCB7XG4gICAgQElucHV0KCkgc2V0IG5neFN1bW1lcm5vdGVWaWV3KGNvbnRlbnQ6IHN0cmluZykge1xuICAgICAgICB0aGlzLl9lbGVtZW50LmlubmVySFRNTCA9IGNvbnRlbnQgfHwgJyc7XG4gICAgfVxuXG4gICAgcHJpdmF0ZSBfZWxlbWVudDogYW55O1xuXG4gICAgY29uc3RydWN0b3IoXG4gICAgICAgIHByaXZhdGUgcmVuZGVyZXI6IFJlbmRlcmVyLFxuICAgICAgICBlbGVtZW50OiBFbGVtZW50UmVmXG4gICAgKSB7XG4gICAgICAgIHRoaXMuX2VsZW1lbnQgPSBlbGVtZW50Lm5hdGl2ZUVsZW1lbnQ7XG4gICAgfVxuXG4gICAgbmdBZnRlclZpZXdJbml0KCkge1xuICAgICAgICB0aGlzLnJlbmRlcmVyLnNldEVsZW1lbnRDbGFzcyh0aGlzLl9lbGVtZW50LCAnbmd4LXN1bW1lcm5vdGUtdmlldycsIHRydWUpO1xuICAgIH1cbn1cbiJdfQ==