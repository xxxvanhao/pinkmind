{"version":3,"sources":["null","ng://ngx-summernote/lib/ngx-summernote.directive.ts","ng://ngx-summernote/lib/ngx-summernote-view.directive.ts","ng://ngx-summernote/lib/ngx-summernote.module.ts"],"names":["__generator","thisArg","body","f","y","t","g","_","label","sent","trys","ops","next","verb","throw","return","Symbol","iterator","this","n","v","op","TypeError","call","done","value","pop","length","push","e","step","NgxSummernoteDirective","el","zone","http","_this","summernoteModelChange","EventEmitter","imageUpload","summernoteInit","blur","_options","immediateAngularModelUpdate","angularIgnoreAttrs","placeholder","tabsize","height","uploadImagePath","toolbar","fontNames","callbacks","onImageUpload","files","uploadImage","buttons","codeBlock","codeBlockButton","SPECIAL_TAGS","INNER_HTML_ATTR","_oldModel","onChange","onTouched","element","nativeElement","indexOf","tagName","toLowerCase","_hasSpecialTag","_$element","$","Object","defineProperty","prototype","options","assign","content","updateEditor","ngOnInit","observers","generateManualController","createEditor","ngOnChanges","changes","_editorInitialized","ngxSummernoteDisabled","firstChange","currentValue","previousValue","summernote","ngOnDestroy","destroyEditor","writeValue","registerOnChange","fn","registerOnTouched","JSON","stringify","html","updateModel","run","modelContent","attributeNodes","attributes","attrs","i","attrName","name","innerHTML","returnedHtml","emit","initListeners","self","on","setTimeout","event","contents","$editable","_editor","setContent","runOutsideAngular","data","$note","setHtml","_model","firstTime","tags","attr","hasOwnProperty","off","getEditor","bind","controls","initialize","destroy","generator","FormData","uploading","append","post","pipe","map","response","path","catchError","throwError","of","subscribe","dataIn","insertFromDataURL","P","_arguments","Promise","resolve","reject","fulfilled","rejected","result","then","apply","reader","FileReader","readAsDataURL","onload","encoding","onerror","error","console","context","ui","button","tooltip","click","selectedText","window","getSelection","toString","replace","invoke","render","Directive","args","selector","providers","provide","NG_VALUE_ACCESSOR","useExisting","forwardRef","multi","ElementRef","NgZone","HttpClient","Input","Output","NgxSummernoteViewDirective","renderer","_element","ngAfterViewInit","setElementClass","Renderer","NgxSummernoteModule","forRoot","ngModule","NgModule","declarations","exports"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = Object.setPrototypeOf ||\r\n    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n    function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = Object.assign || function __assign(t) {\r\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n        s = arguments[i];\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n    }\r\n    return t;\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { HttpClient } from '@angular/common/http';\nimport {\n    Directive,\n    ElementRef,\n    EventEmitter,\n    forwardRef,\n    Input,\n    NgZone,\n    OnChanges,\n    OnDestroy,\n    OnInit,\n    Output,\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { of, throwError } from 'rxjs';\nimport { catchError, map } from 'rxjs/operators';\n\ndeclare var $;\n\n@Directive({\n    // tslint:disable-next-line:directive-selector\n    selector: '[ngxSummernote]',\n    providers: [{\n        provide: NG_VALUE_ACCESSOR,\n        useExisting: forwardRef(() => NgxSummernoteDirective),\n        multi: true\n    }]\n})\nexport class NgxSummernoteDirective implements ControlValueAccessor, OnInit, OnDestroy, OnChanges {\n    @Input() set ngxSummernote(options: any) {\n        if (options.buttons) {\n            Object.assign(options.buttons, this._options.buttons);\n        }\n        this._options = Object.assign(this._options, options);\n    }\n    // summernoteModel directive as input: store initial editor content\n    @Input() set summernoteModel(content: any) {\n        this.updateEditor(content);\n    }\n\n    // summernoteModel directive as output: update model if editor contentChanged\n    @Output() summernoteModelChange: EventEmitter<any> = new EventEmitter<any>();\n    @Output() imageUpload: EventEmitter<any> = new EventEmitter<any>();\n\n    // summernoteInit directive as output: send manual editor initialization\n    @Output() summernoteInit: EventEmitter<Object> = new EventEmitter<Object>();\n\n    @Output() blur: EventEmitter<any> = new EventEmitter<any>();\n\n    @Input() ngxSummernoteDisabled: boolean;\n\n    private _options: any = {\n        immediateAngularModelUpdate: false,\n        angularIgnoreAttrs: null,\n        placeholder: '',\n        tabsize: 2,\n        height: 100,\n        uploadImagePath: '',\n        toolbar: [\n            // [groupName, [list of button]]\n            ['misc', ['codeview', 'undo', 'redo', 'codeBlock']],\n            // ['style', ['bold', 'italic', 'underline', 'clear']],\n            ['font', ['bold', 'italic', 'underline', 'strikethrough', 'superscript', 'subscript', 'clear']],\n            ['fontsize', ['fontname', 'fontsize', 'color']],\n            ['para', ['style0', 'ul', 'ol', 'paragraph', 'height']],\n            ['insert', ['table', 'picture', 'link', 'video', 'hr']],\n        ],\n        fontNames: ['Helvetica', 'Arial', 'Arial Black', 'Comic Sans MS', 'Courier New', 'Roboto', 'Times'],\n        callbacks: {\n            onImageUpload: (files) => this.uploadImage(files)\n        },\n        buttons: {\n            codeBlock: this.codeBlockButton()\n        }\n    };\n\n    private SPECIAL_TAGS: string[] = ['img', 'button', 'input', 'a'];\n    private INNER_HTML_ATTR = 'innerHTML';\n    private _hasSpecialTag: boolean;\n    private _$element: any; // jquery wrapped element\n    private _editor: any; // editor element\n    private _model: string;\n    private _oldModel: string = null;\n    private _editorInitialized: boolean;\n\n    constructor(el: ElementRef, private zone: NgZone, private http: HttpClient) {\n        const element: any = el.nativeElement;\n\n        // check if the element is a special tag\n        if (this.SPECIAL_TAGS.indexOf(element.tagName.toLowerCase()) !== -1) {\n            this._hasSpecialTag = true;\n        }\n\n        // jquery wrap and store element\n        this._$element = (<any>$(element));\n        this.zone = zone;\n    }\n\n    ngOnInit() {\n        this._options.toolbar\n        // check if output summernoteInit is present. Maybe observers is private and\n        // should not be used?? TODO how to better test that an output directive is present.\n        if (!this.summernoteInit.observers.length) {\n            this.createEditor();\n        } else {\n            // TODO not sure it works now...\n            this.generateManualController();\n        }\n    }\n\n    ngOnChanges(changes) {\n        if (this._editorInitialized && changes) {\n            if (changes.ngxSummernoteDisabled && !changes.ngxSummernoteDisabled.firstChange &&\n                changes.ngxSummernoteDisabled.currentValue !== changes.ngxSummernoteDisabled.previousValue) {\n                if (changes.ngxSummernoteDisabled.currentValue) {\n                    this._$element.summernote('disable');\n                } else {\n                    this._$element.summernote('enable');\n                }\n            }\n        }\n    }\n\n    ngOnDestroy() {\n        this.destroyEditor();\n    }\n\n    // Begin ControlValueAccesor methods.\n    onChange = (_) => { };\n    onTouched = () => { };\n\n    // Form model content changed.\n    writeValue(content: any): void {\n        this.updateEditor(content);\n    }\n\n    registerOnChange(fn: (_: any) => void): void { this.onChange = fn; }\n    registerOnTouched(fn: () => void): void { this.onTouched = fn; }\n\n    // Update editor with model contents.\n    private updateEditor(content: any) {\n        if (JSON.stringify(this._oldModel) === JSON.stringify(content)) {\n            return;\n        }\n\n        this._oldModel = content;\n        this._$element.html(content);\n\n        if (this._editorInitialized) {\n            this._$element.summernote('code', content);\n        } else {\n            this._$element.html(content);\n        }\n    }\n\n    // update model if editor contentChanged\n    private updateModel(content?: any) {\n        // console.log(\"update model\", content)\n        this.zone.run(() => {\n            let modelContent: any = null;\n\n            if (this._hasSpecialTag) {\n                const attributeNodes = this._$element[0].attributes;\n                const attrs = {};\n\n                for (let i = 0; i < attributeNodes.length; i++) {\n                    const attrName = attributeNodes[i].name;\n                    if (this._options.angularIgnoreAttrs && this._options.angularIgnoreAttrs.indexOf(attrName) !== -1) {\n                        continue;\n                    }\n                    attrs[attrName] = attributeNodes[i].value;\n                }\n\n                if (this._$element[0].innerHTML) {\n                    attrs[this.INNER_HTML_ATTR] = this._$element[0].innerHTML;\n                }\n\n                modelContent = attrs;\n            } else {\n                const returnedHtml: any = content || '';\n                if (typeof returnedHtml === 'string') {\n                    modelContent = returnedHtml;\n                }\n            }\n            this._oldModel = modelContent;\n            // Update summernoteModel\n            this.summernoteModelChange.emit(modelContent);\n            // Update form model.\n            this.onChange(content);\n        });\n    }\n\n    private initListeners() {\n        const self = this;\n\n        if (!this._$element) { return; }\n\n        this._$element.on('summernote.init', function () {\n            setTimeout(function () {\n                self.updateModel();\n            }, 0);\n        });\n\n        this._$element.on('summernote.change', function (event, contents, $editable) {\n            setTimeout(function () {\n                self.updateModel(contents);\n            }, 0);\n        });\n\n        this._$element.on('summernote.blur', function () {\n            setTimeout(function () {\n                self.onTouched();\n                self.blur.emit();\n            }, 0);\n        });\n\n        if (this._options.immediateAngularModelUpdate) {\n            this._editor.on('keyup', function () {\n                setTimeout(function () {\n                    self.updateModel();\n                }, 0);\n            });\n        }\n    }\n\n    private createEditor() {\n        if (this._editorInitialized) {\n            return;\n        }\n\n        this.setContent(true);\n\n        \n        // this.initListeners(); // issue #31 \n\n        // init editor\n        this.zone.runOutsideAngular(() => {\n            this._editor = this._$element.summernote(this._options).data('summernote').$note;\n            this.initListeners(); // issue #31\n            if (this.ngxSummernoteDisabled) {\n                this._$element.summernote('disable');\n            }\n        });\n\n        this._editorInitialized = true;\n    }\n\n    private setHtml() {\n        this._$element.summernote('code', this._model || '', true);\n    }\n\n    private setContent(firstTime = false) {\n        // console.log(\"set content\", firstTime, this._oldModel, this._model)\n        const self = this;\n        // Set initial content\n        if (this._model || this._model === '') {\n            this._oldModel = this._model;\n            if (this._hasSpecialTag) {\n                const tags: Object = this._model;\n                // add tags on element\n                if (tags) {\n\n                    for (const attr in tags) {\n                        if (tags.hasOwnProperty(attr) && attr !== this.INNER_HTML_ATTR) {\n                            this._$element.attr(attr, tags[attr]);\n                        }\n                    }\n\n                    if (tags.hasOwnProperty(this.INNER_HTML_ATTR)) {\n                        this._$element[0].innerHTML = tags[this.INNER_HTML_ATTR];\n                    }\n                }\n            } else {\n                self.setHtml();\n            }\n        }\n    }\n\n    private destroyEditor() {\n        if (this._editorInitialized) {\n            this._editor.off('keyup');\n            this._$element.summernote('destroy'); // TODO not sure it works now...\n            this._editorInitialized = false;\n        }\n    }\n\n    private getEditor() {\n        if (this._$element) {\n            return this._$element.summernote.bind(this._$element);\n        }\n\n        return null;\n    }\n\n    // send manual editor initialization\n    // TODO not sure it works now...\n    private generateManualController() {\n        const controls = {\n            initialize: this.createEditor.bind(this),\n            destroy: this.destroyEditor.bind(this),\n            getEditor: this.getEditor.bind(this),\n        };\n        this.summernoteInit.emit(controls);\n    }\n\n    private async uploadImage(files) {\n        const data = new FormData();\n        this.imageUpload.emit({ uploading: true });\n        data.append('image', files[0]);\n        if (this._options.uploadImagePath) {\n            this.http.post(this._options.uploadImagePath, data)\n                .pipe(\n                    map((response: { path: string }) => response && typeof response.path === 'string' && response.path),\n                    catchError(e => {\n                        throwError('An error occured while uploading' + e);\n                        return of('');\n                    }))\n                .subscribe(dataIn => {\n                    if (dataIn) {\n                        this._$element.summernote('insertImage', dataIn);\n                        this.imageUpload.emit({ uploading: false });\n                    } else {\n                        this.insertFromDataURL(files);\n                    }\n                }, (e) => {\n                    this.insertFromDataURL(files);\n                });\n        } else {\n            this.insertFromDataURL(files);\n        }\n    }\n\n    insertFromDataURL(files) {\n        const reader = new FileReader();\n        reader.readAsDataURL(files[0]);\n        reader.onload = () => {\n            this._$element.summernote('insertImage', reader.result);\n            this.imageUpload.emit({ uploading: false, encoding: 'base64' });\n        };\n        reader.onerror = error => console.error(error);\n    }\n\n\n    private codeBlockButton() {\n        return function (context) {\n            const ui = $.summernote.ui;\n            // create button\n            const button = ui.button({\n                contents: 'Code block',\n                tooltip: 'Add raw code',\n                click: function () {\n                    let selectedText = null;\n                    // The below code will copy the selected block and add it into our code=block\n                    if (window.getSelection) {\n                        selectedText = window.getSelection().toString().replace(/^\\s+|\\s+$/g, '');\n                    }\n                    const codeText = selectedText ? selectedText : `Place your code here.`;\n                    const codeBlock = `<pre class=\"code-block\" style=\"font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: 12px; padding: 14px 12px; margin-bottom: 10px; line-height: 1.42857; word-break: break-all; overflow-wrap: break-word; background-color: rgb(250, 251, 253); border: 1px solid rgb(234, 236, 240); border-radius: 4px; color: #60a0b0\"><span style=\"white-space: pre-wrap;\">${codeText}</span></pre>`;\n\n                    context.invoke('editor.pasteHTML', codeBlock);\n                }\n            });\n\n            return button.render();   // return button as jquery object\n        }\n    }\n}\n","import {\n    Directive, Input, ElementRef, Renderer, AfterViewInit\n} from '@angular/core';\n\ndeclare var $;\n\n@Directive({\n    // tslint:disable-next-line:directive-selector\n    selector: '[ngxSummernoteView]'\n})\nexport class NgxSummernoteViewDirective implements AfterViewInit {\n    @Input() set ngxSummernoteView(content: string) {\n        this._element.innerHTML = content || '';\n    }\n\n    private _element: any;\n\n    constructor(\n        private renderer: Renderer,\n        element: ElementRef\n    ) {\n        this._element = element.nativeElement;\n    }\n\n    ngAfterViewInit() {\n        this.renderer.setElementClass(this._element, 'ngx-summernote-view', true);\n    }\n}\n","import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { NgxSummernoteDirective } from './ngx-summernote.directive';\nimport { NgxSummernoteViewDirective } from './ngx-summernote-view.directive';\n\n@NgModule({\n  declarations: [\n    NgxSummernoteDirective,\n    NgxSummernoteViewDirective\n  ],\n  exports: [\n    NgxSummernoteDirective,\n    NgxSummernoteViewDirective\n  ]\n})\nexport class NgxSummernoteModule {\n  public static forRoot(): ModuleWithProviders {\n    return {ngModule: NgxSummernoteModule,  providers: []};\n  }\n}\n"]}