{"version":3,"file":"ngx-summernote.js.map","sources":["ng://ngx-summernote/lib/ngx-summernote.directive.ts","ng://ngx-summernote/lib/ngx-summernote-view.directive.ts","ng://ngx-summernote/lib/ngx-summernote.module.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport {\n    Directive,\n    ElementRef,\n    EventEmitter,\n    forwardRef,\n    Input,\n    NgZone,\n    OnChanges,\n    OnDestroy,\n    OnInit,\n    Output,\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { of, throwError } from 'rxjs';\nimport { catchError, map } from 'rxjs/operators';\n\ndeclare var $;\n\n@Directive({\n    // tslint:disable-next-line:directive-selector\n    selector: '[ngxSummernote]',\n    providers: [{\n        provide: NG_VALUE_ACCESSOR,\n        useExisting: forwardRef(() => NgxSummernoteDirective),\n        multi: true\n    }]\n})\nexport class NgxSummernoteDirective implements ControlValueAccessor, OnInit, OnDestroy, OnChanges {\n    @Input() set ngxSummernote(options: any) {\n        if (options.buttons) {\n            Object.assign(options.buttons, this._options.buttons);\n        }\n        this._options = Object.assign(this._options, options);\n    }\n    // summernoteModel directive as input: store initial editor content\n    @Input() set summernoteModel(content: any) {\n        this.updateEditor(content);\n    }\n\n    // summernoteModel directive as output: update model if editor contentChanged\n    @Output() summernoteModelChange: EventEmitter<any> = new EventEmitter<any>();\n    @Output() imageUpload: EventEmitter<any> = new EventEmitter<any>();\n\n    // summernoteInit directive as output: send manual editor initialization\n    @Output() summernoteInit: EventEmitter<Object> = new EventEmitter<Object>();\n\n    @Output() blur: EventEmitter<any> = new EventEmitter<any>();\n\n    @Input() ngxSummernoteDisabled: boolean;\n\n    private _options: any = {\n        immediateAngularModelUpdate: false,\n        angularIgnoreAttrs: null,\n        placeholder: '',\n        tabsize: 2,\n        height: 100,\n        uploadImagePath: '',\n        toolbar: [\n            // [groupName, [list of button]]\n            ['misc', ['codeview', 'undo', 'redo', 'codeBlock']],\n            // ['style', ['bold', 'italic', 'underline', 'clear']],\n            ['font', ['bold', 'italic', 'underline', 'strikethrough', 'superscript', 'subscript', 'clear']],\n            ['fontsize', ['fontname', 'fontsize', 'color']],\n            ['para', ['style0', 'ul', 'ol', 'paragraph', 'height']],\n            ['insert', ['table', 'picture', 'link', 'video', 'hr']],\n        ],\n        fontNames: ['Helvetica', 'Arial', 'Arial Black', 'Comic Sans MS', 'Courier New', 'Roboto', 'Times'],\n        callbacks: {\n            onImageUpload: (files) => this.uploadImage(files)\n        },\n        buttons: {\n            codeBlock: this.codeBlockButton()\n        }\n    };\n\n    private SPECIAL_TAGS: string[] = ['img', 'button', 'input', 'a'];\n    private INNER_HTML_ATTR = 'innerHTML';\n    private _hasSpecialTag: boolean;\n    private _$element: any; // jquery wrapped element\n    private _editor: any; // editor element\n    private _model: string;\n    private _oldModel: string = null;\n    private _editorInitialized: boolean;\n\n    constructor(el: ElementRef, private zone: NgZone, private http: HttpClient) {\n        const element: any = el.nativeElement;\n\n        // check if the element is a special tag\n        if (this.SPECIAL_TAGS.indexOf(element.tagName.toLowerCase()) !== -1) {\n            this._hasSpecialTag = true;\n        }\n\n        // jquery wrap and store element\n        this._$element = (<any>$(element));\n        this.zone = zone;\n    }\n\n    ngOnInit() {\n        this._options.toolbar\n        // check if output summernoteInit is present. Maybe observers is private and\n        // should not be used?? TODO how to better test that an output directive is present.\n        if (!this.summernoteInit.observers.length) {\n            this.createEditor();\n        } else {\n            // TODO not sure it works now...\n            this.generateManualController();\n        }\n    }\n\n    ngOnChanges(changes) {\n        if (this._editorInitialized && changes) {\n            if (changes.ngxSummernoteDisabled && !changes.ngxSummernoteDisabled.firstChange &&\n                changes.ngxSummernoteDisabled.currentValue !== changes.ngxSummernoteDisabled.previousValue) {\n                if (changes.ngxSummernoteDisabled.currentValue) {\n                    this._$element.summernote('disable');\n                } else {\n                    this._$element.summernote('enable');\n                }\n            }\n        }\n    }\n\n    ngOnDestroy() {\n        this.destroyEditor();\n    }\n\n    // Begin ControlValueAccesor methods.\n    onChange = (_) => { };\n    onTouched = () => { };\n\n    // Form model content changed.\n    writeValue(content: any): void {\n        this.updateEditor(content);\n    }\n\n    registerOnChange(fn: (_: any) => void): void { this.onChange = fn; }\n    registerOnTouched(fn: () => void): void { this.onTouched = fn; }\n\n    // Update editor with model contents.\n    private updateEditor(content: any) {\n        if (JSON.stringify(this._oldModel) === JSON.stringify(content)) {\n            return;\n        }\n\n        this._oldModel = content;\n        this._$element.html(content);\n\n        if (this._editorInitialized) {\n            this._$element.summernote('code', content);\n        } else {\n            this._$element.html(content);\n        }\n    }\n\n    // update model if editor contentChanged\n    private updateModel(content?: any) {\n        // console.log(\"update model\", content)\n        this.zone.run(() => {\n            let modelContent: any = null;\n\n            if (this._hasSpecialTag) {\n                const attributeNodes = this._$element[0].attributes;\n                const attrs = {};\n\n                for (let i = 0; i < attributeNodes.length; i++) {\n                    const attrName = attributeNodes[i].name;\n                    if (this._options.angularIgnoreAttrs && this._options.angularIgnoreAttrs.indexOf(attrName) !== -1) {\n                        continue;\n                    }\n                    attrs[attrName] = attributeNodes[i].value;\n                }\n\n                if (this._$element[0].innerHTML) {\n                    attrs[this.INNER_HTML_ATTR] = this._$element[0].innerHTML;\n                }\n\n                modelContent = attrs;\n            } else {\n                const returnedHtml: any = content || '';\n                if (typeof returnedHtml === 'string') {\n                    modelContent = returnedHtml;\n                }\n            }\n            this._oldModel = modelContent;\n            // Update summernoteModel\n            this.summernoteModelChange.emit(modelContent);\n            // Update form model.\n            this.onChange(content);\n        });\n    }\n\n    private initListeners() {\n        const self = this;\n\n        if (!this._$element) { return; }\n\n        this._$element.on('summernote.init', function () {\n            setTimeout(function () {\n                self.updateModel();\n            }, 0);\n        });\n\n        this._$element.on('summernote.change', function (event, contents, $editable) {\n            setTimeout(function () {\n                self.updateModel(contents);\n            }, 0);\n        });\n\n        this._$element.on('summernote.blur', function () {\n            setTimeout(function () {\n                self.onTouched();\n                self.blur.emit();\n            }, 0);\n        });\n\n        if (this._options.immediateAngularModelUpdate) {\n            this._editor.on('keyup', function () {\n                setTimeout(function () {\n                    self.updateModel();\n                }, 0);\n            });\n        }\n    }\n\n    private createEditor() {\n        if (this._editorInitialized) {\n            return;\n        }\n\n        this.setContent(true);\n\n        \n        // this.initListeners(); // issue #31 \n\n        // init editor\n        this.zone.runOutsideAngular(() => {\n            this._editor = this._$element.summernote(this._options).data('summernote').$note;\n            this.initListeners(); // issue #31\n            if (this.ngxSummernoteDisabled) {\n                this._$element.summernote('disable');\n            }\n        });\n\n        this._editorInitialized = true;\n    }\n\n    private setHtml() {\n        this._$element.summernote('code', this._model || '', true);\n    }\n\n    private setContent(firstTime = false) {\n        // console.log(\"set content\", firstTime, this._oldModel, this._model)\n        const self = this;\n        // Set initial content\n        if (this._model || this._model === '') {\n            this._oldModel = this._model;\n            if (this._hasSpecialTag) {\n                const tags: Object = this._model;\n                // add tags on element\n                if (tags) {\n\n                    for (const attr in tags) {\n                        if (tags.hasOwnProperty(attr) && attr !== this.INNER_HTML_ATTR) {\n                            this._$element.attr(attr, tags[attr]);\n                        }\n                    }\n\n                    if (tags.hasOwnProperty(this.INNER_HTML_ATTR)) {\n                        this._$element[0].innerHTML = tags[this.INNER_HTML_ATTR];\n                    }\n                }\n            } else {\n                self.setHtml();\n            }\n        }\n    }\n\n    private destroyEditor() {\n        if (this._editorInitialized) {\n            this._editor.off('keyup');\n            this._$element.summernote('destroy'); // TODO not sure it works now...\n            this._editorInitialized = false;\n        }\n    }\n\n    private getEditor() {\n        if (this._$element) {\n            return this._$element.summernote.bind(this._$element);\n        }\n\n        return null;\n    }\n\n    // send manual editor initialization\n    // TODO not sure it works now...\n    private generateManualController() {\n        const controls = {\n            initialize: this.createEditor.bind(this),\n            destroy: this.destroyEditor.bind(this),\n            getEditor: this.getEditor.bind(this),\n        };\n        this.summernoteInit.emit(controls);\n    }\n\n    private async uploadImage(files) {\n        const data = new FormData();\n        this.imageUpload.emit({ uploading: true });\n        data.append('image', files[0]);\n        if (this._options.uploadImagePath) {\n            this.http.post(this._options.uploadImagePath, data)\n                .pipe(\n                    map((response: { path: string }) => response && typeof response.path === 'string' && response.path),\n                    catchError(e => {\n                        throwError('An error occured while uploading' + e);\n                        return of('');\n                    }))\n                .subscribe(dataIn => {\n                    if (dataIn) {\n                        this._$element.summernote('insertImage', dataIn);\n                        this.imageUpload.emit({ uploading: false });\n                    } else {\n                        this.insertFromDataURL(files);\n                    }\n                }, (e) => {\n                    this.insertFromDataURL(files);\n                });\n        } else {\n            this.insertFromDataURL(files);\n        }\n    }\n\n    insertFromDataURL(files) {\n        const reader = new FileReader();\n        reader.readAsDataURL(files[0]);\n        reader.onload = () => {\n            this._$element.summernote('insertImage', reader.result);\n            this.imageUpload.emit({ uploading: false, encoding: 'base64' });\n        };\n        reader.onerror = error => console.error(error);\n    }\n\n\n    private codeBlockButton() {\n        return function (context) {\n            const ui = $.summernote.ui;\n            // create button\n            const button = ui.button({\n                contents: 'Code block',\n                tooltip: 'Add raw code',\n                click: function () {\n                    let selectedText = null;\n                    // The below code will copy the selected block and add it into our code=block\n                    if (window.getSelection) {\n                        selectedText = window.getSelection().toString().replace(/^\\s+|\\s+$/g, '');\n                    }\n                    const codeText = selectedText ? selectedText : `Place your code here.`;\n                    const codeBlock = `<pre class=\"code-block\" style=\"font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: 12px; padding: 14px 12px; margin-bottom: 10px; line-height: 1.42857; word-break: break-all; overflow-wrap: break-word; background-color: rgb(250, 251, 253); border: 1px solid rgb(234, 236, 240); border-radius: 4px; color: #60a0b0\"><span style=\"white-space: pre-wrap;\">${codeText}</span></pre>`;\n\n                    context.invoke('editor.pasteHTML', codeBlock);\n                }\n            });\n\n            return button.render();   // return button as jquery object\n        }\n    }\n}\n","import {\n    Directive, Input, ElementRef, Renderer, AfterViewInit\n} from '@angular/core';\n\ndeclare var $;\n\n@Directive({\n    // tslint:disable-next-line:directive-selector\n    selector: '[ngxSummernoteView]'\n})\nexport class NgxSummernoteViewDirective implements AfterViewInit {\n    @Input() set ngxSummernoteView(content: string) {\n        this._element.innerHTML = content || '';\n    }\n\n    private _element: any;\n\n    constructor(\n        private renderer: Renderer,\n        element: ElementRef\n    ) {\n        this._element = element.nativeElement;\n    }\n\n    ngAfterViewInit() {\n        this.renderer.setElementClass(this._element, 'ngx-summernote-view', true);\n    }\n}\n","import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { NgxSummernoteDirective } from './ngx-summernote.directive';\nimport { NgxSummernoteViewDirective } from './ngx-summernote-view.directive';\n\n@NgModule({\n  declarations: [\n    NgxSummernoteDirective,\n    NgxSummernoteViewDirective\n  ],\n  exports: [\n    NgxSummernoteDirective,\n    NgxSummernoteViewDirective\n  ]\n})\nexport class NgxSummernoteModule {\n  public static forRoot(): ModuleWithProviders {\n    return {ngModule: NgxSummernoteModule,  providers: []};\n  }\n}\n"],"names":[],"mappings":"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"}
