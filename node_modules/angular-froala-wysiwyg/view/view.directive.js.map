{"version":3,"file":"view.directive.js","sourceRoot":"","sources":["../../.tmp/view/view.directive.ts"],"names":[],"mappings":";;;;;;;;;AAAA,OAAO,EAAE,SAAS,EAAE,UAAU,EAAE,QAAQ,EAAE,KAAK,EAAkC,MAAM,eAAe,CAAC;AAKvG;IAKE,6BAAoB,QAAkB,EAAE,OAAmB;QAAvC,aAAQ,GAAR,QAAQ,CAAU;QACpC,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC,aAAa,CAAC;IACxC,CAAC;IAGQ,sBAAI,2CAAU;QADvB,mCAAmC;aAC1B,UAAe,OAAe;YACrC,IAAI,CAAC,QAAQ,CAAC,SAAS,GAAG,OAAO,CAAC;QACpC,CAAC;;;OAAA;IAED,6CAAe,GAAf;QACE,IAAI,CAAC,QAAQ,CAAC,eAAe,CAAC,IAAI,CAAC,QAAQ,EAAE,SAAS,EAAE,IAAI,CAAC,CAAC;IAChE,CAAC;IANQ;QAAR,KAAK,EAAE;;;yDAEP;IAZU,mBAAmB;QAH/B,SAAS,CAAC;YACT,QAAQ,EAAE,cAAc;SACzB,CAAC;yCAM8B,QAAQ,EAAW,UAAU;OALhD,mBAAmB,CAiB/B;IAAD,0BAAC;CAAA,AAjBD,IAiBC;SAjBY,mBAAmB","sourcesContent":["import { Directive, ElementRef, Renderer, Input, Output, Optional, EventEmitter } from '@angular/core';\n\n@Directive({\n  selector: '[froalaView]'\n})\nexport class FroalaViewDirective {\n\n  private _element: HTMLElement;\n  private _content: any;\n\n  constructor(private renderer: Renderer, element: ElementRef) {\n    this._element = element.nativeElement;\n  }\n\n  // update content model as it comes\n  @Input() set froalaView(content: string){\n    this._element.innerHTML = content;\n  }\n\n  ngAfterViewInit() {\n    this.renderer.setElementClass(this._element, \"fr-view\", true);\n  }\n}"]}